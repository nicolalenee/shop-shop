{"version":3,"sources":["assets/spinner.gif","utils/reducers.js","utils/actions.js","utils/GlobalState.js","components/ProductItem/index.js","utils/helpers.js","utils/queries.js","components/ProductList/index.js","components/CategoryMenu/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","utils/auth.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","reducer","state","action","type","products","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","console","log","useStoreContext","useContext","ProductItem","item","image","name","_id","price","quantity","className","to","alt","src","count","pluralize","QUERY_PRODUCTS","gql","QUERY_CATEGORIES","QUERY_USER","ProductList","useQuery","loading","data","useEffect","length","filter","product","category","map","key","spinner","CategoryMenu","categoryData","onClick","id","Home","useState","setCategory","Detail","useParams","currentProduct","setCurrentProduct","find","description","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","role","aria-label","LOGIN","ADD_USER","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","i","Login","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","variables","mutationResponse","Auth","handleChange","target","onSubmit","htmlFor","placeholder","onChange","Signup","addUser","firstName","lastName","Nav","loggedIn","href","logout","OrderHistory","user","orders","order","parseInt","purchaseDate","toLocaleDateString","index","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.44f4c97f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.ab497855.gif\";","import {\n  UPDATE_PRODUCTS,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from \"./actions\";\n\nimport { useReducer } from \"react\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    // if action.type val is `UPDATE_PRODUCTS`, return a new state object w an upd8ed products array\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n    // if action.type val is `UPDATE_CATEGORIES`, return a new state object w an upd8ed categories array\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n    // if actin.type val is `UPDATE_CURRENT_CATEGORY`, return a new state object w an upd8ed currentCategory string\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory,\n      };\n    //  if it's none of these actions, do not upd8 state and keep things the same!\n    default:\n      return state;\n  }\n};\n\n// initialize global state obj aka store\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState);\n}\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from \"./reducers\";\n\n// instantiate the store\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    categories: [],\n    currentCategory: \"\",\n  });\n\n  // use this to confirm it works!\n  console.log(state);\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\n\nfunction ProductItem(item) {\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","export function pluralize(name, count) {\n  if (count === 1) {\n    return name\n  }\n  return name + 's'\n}\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n","import React, { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { UPDATE_PRODUCTS } from \"../../utils/actions\";\nimport ProductItem from \"../ProductItem\";\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\nimport spinner from \"../../assets/spinner.gif\";\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n  const { currentCategory } = state;\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n    }\n  }, [data, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect } from \"react\";\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from \"../../utils/actions\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_CATEGORIES } from \"../../utils/queries\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n  const { categories } = state;\n  const { data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    // if categoryData exists or has changed, then run dispatch()\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n    }\n  }, [categoryData, dispatch]);\n\n  // click handler to upd8 our store\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React, { useState } from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\n\nconst Home = () => {\n  const [currentCategory, setCategory] = useState(\"\");\n\n  return (\n    <div className=\"container\">\n      <CategoryMenu setCategory={setCategory} />\n      <ProductList currentCategory={currentCategory} />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport { UPDATE_PRODUCTS } from \"../utils/actions\";\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\nimport spinner from \"../assets/spinner.gif\";\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products } = state;\n\n  useEffect(() => {\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product.id === id));\n    } else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n    }\n  }, [products, data, dispatch, id]);\n\n  return (\n    <>\n      {currentProduct ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{\" \"}\n            <button>Add to Cart</button>\n            <button>Remove from Cart</button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">🛍️</span>\n          -Shop-Shop\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport Home from \"./pages/Home\";\nimport Detail from \"./pages/Detail\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Nav from \"./components/Nav\";\nimport { StoreProvider } from \"./utils/GlobalState\";\n\nimport OrderHistory from \"./pages/OrderHistory\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\n              <Route exact path=\"/products/:id\" component={Detail} />\n              <Route component={NoMatch} />\n            </Switch>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}